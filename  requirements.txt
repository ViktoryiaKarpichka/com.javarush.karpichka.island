Final Project 2. OOP

Your task is to program an island model with changeable parameters, consisting of an array of locations (for example, 100x20 cells).
The locations will be filled with vegetation and animals. Animals can:

-eat plants and/or other animals (if there is suitable food in their location),
-move (to neighboring locations),
-reproduce (if there is a pair in their location),
-to die of hunger or to be eaten.

OOP

When creating a variety of animals, you need to use OOP to the maximum: all species will come from one abstract class Animal,
which will contain behavior common to all animals. If specific animals have peculiarities of nutrition, reproduction,
movement, etc., then you will need to override the methods of the Animal class.

What to do:

1. Create a class hierarchy:

Predator: Wolf, Boa Constrictor, Fox, Bear, Eagle
Herbivores: Horse, Deer, Rabbit, Mouse, Goat, Sheep, Boar, Buffalo, Duck, Caterpillar
Plants

The table below shows how likely an animal is to eat “food” if they are on the same square.
Let's look at a wolf eat rabbit situation. The number in the table is 60. This means that a wolf can eat a rabbit,
if they are on the same cell, with a probability of 60%. You need to use multi-threaded random.

	Wolf Boa Fox Bear Eagle Horse Deer Rabbit Mouse Goat Sheep Boar Buffalo Duck Caterpillar Plants
Wolf	-	0	0	0	0	10	15	60	80	60	70	15	10	40	0	0
Boa 	0	-	15	0	0	0	0	20	40	0	0	0	0	10	0	0
Fox 	0	0	-	0	0	0	0	70	90	0	0	0	0	60	40	0
Bear	0	80	0	-	0	40	80	80	90	70	70	50	20	10	0	0
Eagle	0	0	10	0	-	0	0	90	90	0	0	0	0	80	0	0
Horse	0	0	0	0	0	-	0	0	0	0	0	0	0	0	0	100
Deer	0	0	0	0	0	0	-	0	0	0	0	0	0	0	0	100
Rabbit	0	0	0	0	0	0	0	-	0	0	0	0	0	0	0	100
Mouse	0	0	0	0	0	0	0	0	-	0	0	0	0	0	90	100
Goat	0	0	0	0	0	0	0	0	0	-	0	0	0	0	0	100
Sheep	0	0	0	0	0	0	0	0	0	0	-	0	0	0	0	100
Boar	0	0	0	0	0	0	0	0	50	0	0	-	0	0	90	100
Buffalo	0	0	0	0	0	0	0	0	0	0	0	0	-	0	0	100
Duck 	0	0	0	0	0	0	0	0	0	0	0	0	0	-	90	100
Caterpillar	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-	100

Animal Characteristics:

	animal's weight, kg Max number of animals (species) on one cell Speed of movement, no more than cells per move How many kilograms of food does an animal need to be completely satisfied
Wolf        50 30 3 8
Boa         15 30 1 3
Fox         8 30 2 2
Bear        500 5 2 80
Eagle       6 20 3 1
Horse       400 20 4 60
Deer        300 20 4 50
Rabbit      2 150 2 0.45
Mouse       0.05 500 1 0.01
Goat        60 140 3 10
Sheep       70 140 3 15
Boar        400 50 2 50
Buffalo     700 10 3 100
Duck        1 200 4 0.15
Caterpillar 0.01 1000 0 0
Plants      1,200 N/A N/A

2. The animal must have methods: eat, reproduce, choose the direction of movement.

3. In the herbivore and predator classes, you can implement the eat method. But pay attention, there is a herbivorous duck that eats a caterpillar.

4. In specific classes of a particular species, all methods can be modified to suit the characteristics of the animal.

5. At least 10 types of herbivores and 5 types of predators must be created (described in paragraph 1).

Multithreading

Of course, it's possible to write the entire program using a single thread and loops.
However, we need to practice working with multithreading, so it’s essential to use threads and thread pools.

A single scheduled thread pool should be used for executing tasks such as plant growth, the life cycle of animals, and system statistics on a schedule.
As an alternative, you can combine statistics reporting with the plant or animal tasks into a single task.
Inside the animal life cycle task, you can use another thread pool — a regular one.
What tasks to delegate to this pool is up to you to decide.
Mandatory Tasks:
Animal hierarchy (OOP principles)
Animal behavior
Multithreading
Statistics on the state of the island for each tick (displayed in the console)
Optional Tasks:
Consolidate parameters in one place for easier "simulation" management.
Use graphics instead of console-based statistics. This could be pseudo-graphics in the console or JavaFX, Swing, etc.
Add other factors that could influence the simulation:
More animal species
Different types of plants
Custom behavior for groups of animals (e.g., wolves hunting and moving in packs instead of individually)
Terrain features, including rivers that block movement for certain animals
About Parameters (if you choose to implement them):
To make it convenient to modify various parameters when starting the program
(island size, maximum number of plants/animals in a single cell, movement probability of each animal species, reproduction rates, etc.),
these parameters should be extracted into a separate class or configuration.

You should be able to change the following parameters:

-Island size
-Simulation tick duration
-Number of animals of each species at the start of the simulation
-Simulation stop conditions (e.g., all animals die)
-Number of offspring for each animal species
-Unicode (if you choose to implement pseudo-graphics):
You can use Unicode symbols to represent animals:
🐃, 🐻, 🐎, 🦌, 🐗, 🐑, 🐐, 🐺, 🐍, 🦊, 🦅, 🐇, 🦆, 🐁, 🐛.

Project Review:
The project will be reviewed during group sessions.